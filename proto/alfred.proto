syntax = "proto3";

option go_package = "github.com/gammadia/alfred/proto";

package proto;

import "google/protobuf/duration.proto";

service Alfred {
    rpc LoadImage (stream LoadImageMessage) returns (stream LoadImageResponse);
    rpc ScheduleJob (ScheduleJobRequest) returns (ScheduleJobResponse);
    rpc Ping (PingRequest) returns (PingResponse);
}

message Job {
    string name = 1;
    string image = 2;
    repeated Env env = 3;
    repeated Service services = 4;
    repeated string tasks = 5;

    message Service {
        string name = 1;
        string image = 2;
        repeated Env env = 3;
        optional Health health = 4;

        message Health {
            string cmd = 1;
            repeated string args = 2;

            optional google.protobuf.Duration timeout = 3;
            optional google.protobuf.Duration interval = 4;
            optional uint64 retries = 5;
        }
    }

    message Env {
        string key = 1;
        string value = 2;
    }
}

message LoadImageMessage {
    message Init {
        string image_id = 1;
    }
    message Data {
        bytes chunk = 1;
        uint32 length = 2;
    }
    message Done {}

    oneof message {
        Init init = 1;
        Data data = 2;
        Done done = 3;
    }
}

message LoadImageResponse {
    enum Status {
        UNSPECIFIED = 0;
        CONTINUE = 1;
        OK = 2;
    }

    Status status = 1;
    optional uint32 chunk_size = 2;
}

message ScheduleJobRequest {
    Job job = 1;
}

message ScheduleJobResponse {

}
message PingRequest {}

message PingResponse {
    string version = 1;
    string commit = 2;
}
